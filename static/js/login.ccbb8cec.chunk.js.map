{"version":3,"sources":["view/loginPage/loginPage.js","view/loginPage/index.js"],"names":["loginPage","handleSubmit","e","preventDefault","_this","props","form","validateFields","err","values","localStorage","setItem","password","username","resetChatHistory","console","log","setActiveUser","history","push","getFieldDecorator","this","react_default","a","createElement","className","es_form","onSubmit","Item","rules","required","message","input","prefix","icon","type","style","color","placeholder","es_button","htmlType","Component","loginPageConnect","connect","state","user","dispatch","data","view_loginPage_loginPage","create","name"],"mappings":"uQAKMA,6MACJC,aAAe,SAAAC,GACbA,EAAEC,iBACFC,EAAKC,MAAMC,KAAKC,eAAe,SAACC,EAAKC,GAC9BD,IACHE,aAAaC,QAAQ,QAASF,EAAOG,UACrCF,aAAaC,QAAQ,YAAaF,EAAOI,UACtCJ,EAAOI,WAAaT,EAAKC,MAAMQ,UAEhCT,EAAKC,MAAMS,mBAEbC,QAAQC,IAAIZ,EAAKC,MAAMQ,UAEvBT,EAAKC,MAAMY,cAAcR,EAAOI,UAChCT,EAAKC,MAAMa,QAAQC,KAAK,qFAIrB,IACCC,EAAsBC,KAAKhB,MAAMC,KAAjCc,kBACR,OACEE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACbH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAAE,EAAA,GAAMC,SAAUN,KAAKpB,aAAcwB,UAAU,cAC3CH,EAAAC,EAAAC,cAAAE,EAAA,EAAME,KAAN,KACGR,EAAkB,WAAY,CAC7BS,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,iCADpCX,CAGCE,EAAAC,EAAAC,cAAAQ,EAAA,GACEC,OAAQX,EAAAC,EAAAC,cAAAU,EAAA,GAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAC1CC,YAAY,eAIlBhB,EAAAC,EAAAC,cAAAE,EAAA,EAAME,KAAN,KACGR,EAAkB,WAAY,CAC7BS,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,iCADpCX,CAGCE,EAAAC,EAAAC,cAAAQ,EAAA,GACEC,OAAQX,EAAAC,EAAAC,cAAAU,EAAA,GAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAC1CF,KAAK,WACLG,YAAY,eAIlBhB,EAAAC,EAAAC,cAAAE,EAAA,EAAME,KAAN,KACEN,EAAAC,EAAAC,cAAAe,EAAA,GAAQJ,KAAK,UAAUK,SAAS,SAASf,UAAU,qBAAnD,qBAhDUgB,aA8ElBC,EAAmBC,YAnBD,SAAAC,GAEtB,MAAO,CACL/B,SAFe+B,EAATC,KAEShC,WAIQ,SAAAiC,GACzB,MAAO,CACLhC,iBAAkB,kBAAMgC,EAAS,CAC/BX,KAAM,yBAERlB,cAAe,SAAC8B,GAAD,OAAUD,EAAS,CAChCX,KAAM,kBACNY,YAKmBJ,CAGvB3C,GAEagD,EAAAtB,EAAA,EAAKuB,OAAO,CAAEC,KAAM,gBAApB,CAAsCR,GCvFtC1C","file":"static/js/login.ccbb8cec.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './loginPage.less';\nimport { Form, Icon, Input, Button } from 'antd';\nimport { connect } from \"react-redux\";\n\nclass loginPage extends Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        localStorage.setItem(\"token\", values.password);\n        localStorage.setItem('userrname', values.username)\n        if(values.username !== this.props.username) {\n          debugger;\n          this.props.resetChatHistory();\n        }\n        console.log(this.props.username);\n        debugger;\n        this.props.setActiveUser(values.username);\n        this.props.history.push(\"/home\");\n      }\n    });\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div className=\"view-login-page\">\n        <div className=\"\">\n          <h1>Hello!</h1>\n          <h3>Sign in with us</h3>\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\n            <Form.Item>\n              {getFieldDecorator('username', {\n                rules: [{ required: true, message: 'Please input your username!' }],\n              })(\n                <Input\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Username\"\n                />,\n              )}\n            </Form.Item>\n            <Form.Item>\n              {getFieldDecorator('password', {\n                rules: [{ required: true, message: 'Please input your Password!' }],\n              })(\n                <Input\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  type=\"password\"\n                  placeholder=\"Password\"\n                />,\n              )}\n            </Form.Item>\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                Log in\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { user } = state;\n  return { \n    username: user.username\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    resetChatHistory: () => dispatch({ \n      type: 'UPDATE_CHAT_HISTORY'\n    }),\n    setActiveUser: (data) => dispatch({\n      type: 'SET_ACTIVE_USER',\n      data\n    })\n  }\n}\n\nconst loginPageConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(loginPage);\n\nexport default Form.create({ name: 'normal_login' })(loginPageConnect);","import loginPage from \"./loginPage\"\nexport default loginPage;\n"],"sourceRoot":""}