{"version":3,"sources":["components/chatWindow/index.js","components/chatWindow/chatWindow.js","components/chatHeader/index.js","components/chatHeader/chatHeader.js","utils/helpers.js","components/chatMessage/index.js","components/chatMessage/chatMessage.js","components/editor/editor.js","components/editor/index.js","components/chatFooter/index.js","components/chatFooter/chatFooter.js","view/homePage/homePage.js","utils/constant.js","view/homePage/index.js"],"names":["chatWindow","react_default","a","createElement","className","this","props","children","Component","chatHeader","badge","status","online","text","getUserNameFirstChar","username","localStorage","getItem","getUserName","chatMessage","msg","i","key","comment","author","avatar","style","color","backgroundColor","content","datetime","tooltip","title","moment","format","fromNow","_this","chatHistory","length","map","index","showMsg","showEchoMsg","TextArea","editor","inputEl","useRef","useEffect","current","focus","Fragment","es_form","Item","rows","onChange","value","placeholder","ref","es_button","htmlType","loading","submitting","onClick","onSubmit","type","chatFooter","_this$props","inputMsg","components_editor","handleSubmit","homePage","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","e","setState","target","handleLogout","clear","history","push","onWsOpen","evt","console","log","onWsClose","onWsMessageRcv","updateChatHistory","data","onWsError","sendMsg","webSocketInstance","readyState","state","trim","send","WebSocket","addEventListener","components_chatWindow","components_chatHeader","components_chatMessage","components_chatFooter","placement","icon","connect","chat","dispatch"],"mappings":"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","file":"static/js/home.1ddf467e.chunk.js","sourcesContent":["import chatWindow from \"./chatWindow\"\nexport default chatWindow;\n","import React, {Component} from 'react';\nimport './chatWindow.less'\n\nexport default class chatWindow extends Component {\n  render() {\n    return <div className=\"component-chat-window\">\n      {this.props.children}\n    </div>;\n  }\n}","import chatHeader from \"./chatHeader\"\nexport default chatHeader;\n","import React, {Component} from 'react';\nimport './chatHeader.less';\nimport { Badge } from 'antd';\nexport default class chatHeader extends Component {\n  render() {\n    return <div className=\"component-chat-header\">\n      <Badge \n        status={this.props.online === true ? \"success\" : \"error\"}\n        text={this.props.online === true ? \"Online\" : \"Offline\"}\n      />\n      <h3>What's on your mind ?</h3>\n    </div>;\n  }\n}","export const getUserNameFirstChar = () => {\n    let username = localStorage.getItem('username');\n    return username ? username[0] : \"YOU\";\n}\n\nexport const getUserName = () => {\n    let username = localStorage.getItem('username');\n    return username ? username : \"YOU\";\n}","import chatMessage from \"./chatMessage\"\nexport default chatMessage;\n","import React, { Component } from 'react';\nimport './chatMessage.less';\nimport { Comment, Tooltip, Avatar } from 'antd';\nimport moment from 'moment';\nimport { getUserNameFirstChar, getUserName } from \"utils/helpers\";\n\nexport default class chatMessage extends Component {\n  showMsg(msg, i) {\n    return <div className=\"message\" key={i}>\n      <Comment\n        // actions={actions}\n        author={<h4>{getUserName()}</h4>}\n        avatar={\n          <Avatar style={{ color: '#fff', backgroundColor: '#1f2324' }}>\n            {getUserNameFirstChar()}\n          </Avatar>\n        }\n        content={\n          <p>\n            {msg}\n          </p>\n        }\n        datetime={\n          <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\n            <span>{moment().fromNow()}</span>\n          </Tooltip>\n        }\n      />\n    </div>\n  }\n  showEchoMsg(msg, i) {\n    return <div className=\"message\" key={i}>\n      <Comment\n        // actions={actions}\n        author={<h4>Reply</h4>}\n        avatar={\n          <Avatar style={{ color: '#fff', backgroundColor: '#1f2324' }}>\n            W.S.\n          </Avatar>\n        }\n        content={\n          <p>\n            {msg}\n          </p>\n        }\n        datetime={\n          <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\n            <span>{moment().fromNow()}</span>\n          </Tooltip>\n        }\n      />\n    </div>\n  }\n  render() {\n    const { chatHistory } = this.props;\n    return <div className=\"component-chat-message\">\n      {chatHistory && chatHistory.length > 0 && chatHistory.map((msg, index) => {\n        return (((index+1) % 2) !== 0) ? this.showMsg(msg, index) : this.showEchoMsg(msg, index)\n      })}\n    </div>\n  }\n}","import React, { useRef, useEffect } from 'react';\nimport './editor.less';\nimport { Form, Button, Input } from 'antd';\nconst { TextArea } = Input;\n\nconst Editor = (props) => {\n  const inputEl = useRef(null);\n  useEffect(() => {\n    if(inputEl.current) {\n      inputEl.current.focus();\n    }\n  }, [])\n  return <>\n    <Form.Item>\n      <TextArea \n        rows={2}\n        onChange={props.onChange}\n        value={props.value} \n        placeholder=\"Type your message here\"\n        ref={inputEl}\n        />\n    </Form.Item>\n    <Form.Item>\n      <Button htmlType=\"submit\" loading={props.submitting} onClick={props.onSubmit} type=\"primary\">\n        Send Message\n    </Button>\n    </Form.Item>\n  </>\n}\n\nexport default Editor;","import editor from \"./editor\"\nexport default editor;\n","import chatFooter from \"./chatFooter\"\nexport default chatFooter;\n","import React, { Component } from 'react';\nimport './chatFooter.less'\nimport { Comment, Avatar } from 'antd';\nimport Editor from \"components/editor\";\nimport { getUserNameFirstChar } from \"utils/helpers\";\n\nexport default class chatFooter extends Component {\n\n  render() {\n\n    const { submitting, value, inputMsg } = this.props;\n\n    return <div className=\"component-chat-footer\">\n      <Comment\n        avatar={\n          <Avatar style={{ color: '#fff', backgroundColor: '#1f2324' }}>\n            {getUserNameFirstChar()}\n          </Avatar>\n        }\n        content={\n          <Editor\n            onChange={this.props.onChange}\n            onSubmit={this.props.handleSubmit}\n            submitting={submitting}\n            value={inputMsg}\n          />\n        }\n      />\n    </div>;\n  }\n}","import React, {Component} from 'react';\nimport './homePage.less';\nimport { Button, Icon, Tooltip } from 'antd';\nimport ChatWindow from 'components/chatWindow';\nimport ChatHeader from 'components/chatHeader';\nimport ChatMessage from 'components/chatMessage';\nimport ChatFooter from 'components/chatFooter';\nimport { wsUri } from 'utils/constant';\nimport { connect } from \"react-redux\";\n\nclass homePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      online: false,\n      submitting: false,\n      inputMsg: ''\n    }\n    this.webSocketInstance = null;\n  }\n  handleInputChange = e => {\n    this.setState({\n      inputMsg: e.target.value,\n    });\n  };\n  handleLogout = () => {\n    localStorage.clear();\n    this.props.history.push(\"/\");\n  }\n  onWsOpen = (evt) => {\n    console.log(evt);\n    if(evt) {\n      this.setState({\n        online: true\n      });\n    }\n  }\n  onWsClose = (evt) => {\n    console.log(evt);\n    if(evt) {\n      this.setState({\n        online: false\n      });\n    }\n  }\n  onWsMessageRcv = (evt) => {\n    console.log(evt);\n    this.props.updateChatHistory(evt.data);\n    if(evt.data) {\n      this.setState({\n        inputMsg: \"\"\n      });\n    }\n  }\n  onWsError = (evt) => {\n    console.log(evt);\n    // handleNotification\n    if(evt) {\n      console.log(evt);\n      this.setState({\n        online: false\n      })\n    }\n  }\n  sendMsg = () => {\n    if(this.webSocketInstance.readyState === 1 && this.state.inputMsg.trim().length > 0) {\n      this.props.updateChatHistory(this.state.inputMsg);\n      this.webSocketInstance.send(this.state.inputMsg);\n    }\n  }\n  componentDidMount() {\n    this.webSocketInstance = new WebSocket(wsUri);\n    this.webSocketInstance.addEventListener('open', this.onWsOpen);\n    this.webSocketInstance.addEventListener('close', this.onWsClose);\n    this.webSocketInstance.addEventListener('message', this.onWsMessageRcv);\n    this.webSocketInstance.addEventListener('error', this.onWsError);\n  }\n  render() {\n    return <div className=\"view-home-page\">\n      <div className=\"container\">\n\n        <ChatWindow >\n          <ChatHeader \n            online={this.state.online}\n          />\n          <ChatMessage \n            chatHistory={this.props.chatHistory}\n          />\n          <ChatFooter \n            inputMsg={this.state.inputMsg}\n            onChange={this.handleInputChange}\n            handleSubmit={this.sendMsg}\n            submitting={this.state.submitting}\n          />\n        </ChatWindow>\n\n        <Tooltip \n          placement=\"topRight\" \n          title={\"Logout\"} \n          className=\"logout-btn\"\n          onClick={this.handleLogout}>\n            <Button type=\"primary\">\n              <Icon type=\"logout\" />\n            </Button>\n        </Tooltip>\n\n      </div>\n    </div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  const { chat } = state;\n  return { \n    chatHistory: chat.chatHistory\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateChatHistory: (data) => dispatch({ \n      type: 'UPDATE_CHAT_HISTORY', \n      data \n    }),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(homePage);","export const wsUri = \"wss://echo.websocket.org/\";\n","import homePage from \"./homePage\"\nexport default homePage;\n"],"sourceRoot":""}